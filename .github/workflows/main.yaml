name: install-test-build

on: [push]

env:
    CI: true

jobs:
    install:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            - uses: actions/cache@v1
              env:
                  cache-name: cache-node-modules
              with:
                  path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
                  key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.cache-name }}-
                      ${{ runner.os }}-build-
                      ${{ runner.os }}-

            - run: yarn install --frozen-lockfile

    test:
        runs-on: ubuntu-latest
        needs: [install]

        steps:
            - run: yarn build:ts
            - run: yarn test

    build:
        runs-on: ubuntu-latest
        needs: [install, test]

        steps:
            - run: yarn build:prod

    deploy:
        if: github.ref == 'master' # only on master branch

        runs-on: ubuntu-latest
        needs: [install, test, build]

        steps:
            - run: yarn docker:deploy
            # create new version (& push to github) (skips ci to avoid an infinite loop)
            - run: yarn lerna version

            # get the latest tag
            - run: echo "export LATEST_TAG=$(git describe --tags --abbrev=0)" >> $BASH_ENV

            # print for debugging
            - run: echo "$LATEST_TAG"

            - run: yarn docker:tag-version

            - run: yarn docker:push-tagged-version
