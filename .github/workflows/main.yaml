name: install-test-build-deploy

on: [push]

env:
    CI: true

jobs:
    install:
        runs-on: ubuntu-latest

        steps:
            - run: echo "github.ref == ${{github.ref}}"

            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
              id: yarn-cache

            - uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile
              if: steps.yarn-cache.outputs.cache-hit != 'true'

    test:
        runs-on: ubuntu-latest
        needs: [install]

        steps:
            # BEGIN INSTALL
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
              id: yarn-cache

            - uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile
              if: steps.yarn-cache.outputs.cache-hit != 'true'
            # END INSTALL

            - run: yarn build:ts
            - run: yarn test

    build:
        if: github.ref != 'master' # see `build-and-deploy`
        runs-on: ubuntu-latest
        needs: [install]

        steps:
            # BEGIN INSTALL
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
              id: yarn-cache

            - uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile
              if: steps.yarn-cache.outputs.cache-hit != 'true'
            # END INSTALL

            - run: yarn build:prod

    build-and-deploy:
        if: github.ref == 'master' # see `build`

        runs-on: ubuntu-latest
        needs: [install, test]

        steps:
            # BEGIN BUILD

            # BEGIN INSTALL
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1

            # https://github.com/actions/cache/blob/master/examples.md#node---yarn
            - name: Get yarn cache
              run: echo "::set-output name=dir::$(yarn cache dir)"
              id: yarn-cache

            - uses: actions/cache@v1
              with:
                  path: ${{ steps.yarn-cache.outputs.dir }}
                  key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - run: yarn install --frozen-lockfile
              if: steps.yarn-cache.outputs.cache-hit != 'true'
            # END INSTALL

            - run: yarn build:prod
            # END BUILD

            - run: yarn docker:deploy
            # create new version (& push to github) (skips ci to avoid an infinite loop)
            - run: yarn lerna version

            # get the latest tag
            - run: echo "export LATEST_TAG=$(git describe --tags --abbrev=0)" >> $BASH_ENV

            # print for debugging
            - run: echo "$LATEST_TAG"

            - run: yarn docker:tag-version

            - run: yarn docker:push-tagged-version
