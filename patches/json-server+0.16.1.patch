diff --git a/node_modules/json-server/lib/server/router/plural.js b/node_modules/json-server/lib/server/router/plural.js
index c9f6658..c210470 100644
--- a/node_modules/json-server/lib/server/router/plural.js
+++ b/node_modules/json-server/lib/server/router/plural.js
@@ -28,10 +28,28 @@ module.exports = (db, name, opts) => {
   function embed(resource, e) {
     e && [].concat(e).forEach(externalResource => {
       if (db.get(externalResource).value) {
-        const query = {};
+        /**
+		 * allow embedding resources with both
+		 * one-to-one and one-to-many relationships
+		*/
         const singularResource = pluralize.singular(name);
-        query[`${singularResource}${opts.foreignKeySuffix}`] = resource.id;
-        resource[externalResource] = db.get(externalResource).filter(query).value();
+        const pluralResource = pluralize.plural(name);
+
+        const singularKey = `${singularResource}${opts.foreignKeySuffix}`;
+        const pluralKey = `${pluralResource}${opts.foreignKeySuffix}`;
+
+        let singularQuery = {};
+        let pluralQuery = {};
+
+        singularQuery[singularKey] = resource.id;
+        pluralQuery[pluralKey] = !pluralQuery[pluralKey] ? [resource.id] : pluralQuery[pluralKey].push(resource.id);
+
+        resource[externalResource] = db
+            .get(externalResource)
+            .filter((resource, _key, _collection) => {
+                return _.isMatch(resource, singularQuery) || _.isMatch(resource, pluralQuery);
+            })
+            .value();
       }
     });
   } // Expand function used in GET /name and GET /name/id
@@ -53,6 +71,25 @@ module.exports = (db, name, opts) => {
   // GET /name?_start=&_end=&
   // GET /name?_embed=&_expand=
 
+  /**
+   * allow picking fields
+   * See https://github.com/typicode/json-server/pull/930
+   */
+ function fields(resource, e) {
+    if (!e || e === '') {
+      return resource
+    }
+
+    const isChain = resource.__chain__
+    const value = isChain ? resource.value() : resource
+
+    const _fieldSet = e.split(',')
+    const result = _.isArray(value)
+      ? _.map(value, r => _.pick(r, _fieldSet))
+      : _.pick(value, _fieldSet)
+    return isChain ? _.chain(result) : result
+  }
+
 
   function list(req, res, next) {
     // Resource chain
@@ -205,7 +242,8 @@ module.exports = (db, name, opts) => {
 
   function show(req, res, next) {
     const _embed = req.query._embed;
-    const _expand = req.query._expand;
+	const _expand = req.query._expand;
+	const _fields = req.query._fields;
     const resource = db.get(name).getById(req.params.id).value();
 
     if (resource) {
@@ -217,7 +255,10 @@ module.exports = (db, name, opts) => {
       embed(clone, _embed); // Expand inner resources based on id
       // /posts/1?_expand=user
 
-      expand(clone, _expand);
+	  expand(clone, _expand);
+
+	  fields(clone, _fields);
+
       res.locals.data = clone;
     }
 
