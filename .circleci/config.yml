### config.yml
###
### Javascript Node CircleCI 2.0 configuration file
###
### Check https://circleci.com/docs/2.0/language-javascript/ for more details
###
version: 2.1
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:lts

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - v1-dependencies-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: yarn install --frozen-lockfile

      ### TODO - do NOT scrape on build to avoid the same stuff in docker container
      - run: yarn build

      - save_cache:
          paths:
            - node_modules
            - ~/.cache/yarn
            - server/saved-content
          key: v1-dependencies-{{ .Branch }}-{{ checksum "yarn.lock" }}
          # key: v1-dependencies-{{ checksum "yarn.lock" }}
      # not yet
      # run tests!
      #- run: yarn test

      - run: git config --global user.email $GIT_USER_EMAIL
      - run: git config --global user.name $GIT_USER_NAME

      # create new version (skips ci to avoid an infinite loop)
      - run: yarn lerna version

      - run: git tag
      - run: echo "$(git tag)"

      # testing
      - run: echo 'latest tag $(git describe --tags)'

      ### WARNING BROKEn
      # get & save latest tag
      - run: echo 'export LATEST_TAG=$(git describe --tags)' >> $BASH_ENV

      ###
      ### BEGIN copy-pasta from circleci
      ###
      ### install docker
      ### see https://circleci.com/docs/2.0/building-docker-images/
      ###
      - setup_remote_docker:
          docker_layer_caching: true

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
      # - run:
      #     name: Install Docker client
      #     command: |
      #       set -x
      #       VER="17.03.0-ce"
      #       curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
      #       tar -xz -C /tmp -f /tmp/docker-$VER.tgz
      #       mv /tmp/docker/* /usr/bin
      ### END copy-pasta from circleci
      #
      # # build and push Docker image
      # - run: |
      #     TAG=0.1.$CIRCLE_BUILD_NUM
      #     docker build -t   CircleCI-Public/circleci-demo-docker:$TAG .
      #     docker login -u $DOCKER_USER -p $DOCKER_PASS
      #     docker push CircleCI-Public/circleci-demo-docker:$TAG

      - run: yarn docker:deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - build:
        filters:
          branches:
            only: master
